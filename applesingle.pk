type DataForkDescriptorId = struct {
  uint32 id = 1;
  method _print = void: { print "DATA(1)"; }
};
type ResourceForkDescriptorId = struct {
  uint32 id = 2;
  method _print = void: { print "RSRC(2)"; }
};
type RealNameDescriptorId = struct {
  uint32 id = 3;
  method _print = void: { print "NAME(3)"; }
};
type FileDatesDescriptorId = struct {
  uint32 id = 8;
  method _print = void: { print "DATE(8)"; }
};
type FinderInfoDescriptorId = struct {
  uint32 id = 9;
  method _print = void: { print "FNDR(9)"; }
};
type OtherDescriptorId = struct {
  uint32 _id;
};

type EntryDescriptor = struct {
  union {
    DataForkDescriptorId data;
    ResourceForkDescriptorId rsrc;
    RealNameDescriptorId name;
    FileDatesDescriptorId date;
    FinderInfoDescriptorId fndr;
    OtherDescriptorId other;
  };
  uint32 _offset;
  uint32 _len;
};

type OSType = struct {
  char[4] data;
  method _print = void:
  {
    printf "<%s>", catos(data);
  }
};

type FinderFlags = struct {
  struct uint<16> {
    uint<1> legacy_desktop;
    uint<3> color;
    uint<2>;
    uint<1> shared;
    uint<1> no_inits;
    uint<1> has_been_inited;
    uint<1>;
    uint<1> has_custom_icon;
    uint<1> is_stationery;
    uint<1> name_locked;
    uint<1> has_bundle;
    uint<1> is_invisible;
    uint<1> is_alias;
  } flags;
};

type FinderInfo = struct {
  OSType type_code;
  OSType creator_code;
  FinderFlags flags;
  uint32 location;
  uint16 folder;
};

type AppleSingleHeader = struct {
  uint32 magic = 0x0005_1600;
  uint32 version = 0x0002_0000;
  uint16 n_entries @ 24#B;
  EntryDescriptor[n_entries] descriptors;
};
